rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Assistant documents
    match /assistants/{assistantId} {
      // Allow read for everyone if assistant is public, 
      // or for authenticated users if private
      allow read: if true; // Public read for now
      
      // Allow write only for admins
      allow write: if request.auth != null 
        && (
          // Admin email check (replace with your admin emails)
          request.auth.token.email == 'javier@cursosgratis.ai' ||
          request.auth.token.email == 'info@cursosgratis.ai' ||
          // Or check custom claims if you have roles
          request.auth.token.admin == true ||
          request.auth.token.role == 'admin'
        );
      
      // Special rule for avatar field updates
      allow update: if request.auth != null 
        && (
          request.auth.token.email == 'javier@cursosgratis.ai' ||
          request.auth.token.email == 'info@cursosgratis.ai' ||
          request.auth.token.admin == true ||
          request.auth.token.role == 'admin'
        )
        // Only allow updating the avatar field
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['avatar'])
        // Validate avatar structure
        && (
          request.resource.data.avatar == null ||
          (
            request.resource.data.avatar.keys().hasAll(['downloadURL', 'storagePath', 'width', 'height', 'format', 'version', 'updatedAt', 'updatedAtMs']) &&
            request.resource.data.avatar.downloadURL is string &&
            request.resource.data.avatar.storagePath is string &&
            request.resource.data.avatar.width is number &&
            request.resource.data.avatar.height is number &&
            request.resource.data.avatar.format is string &&
            request.resource.data.avatar.version is number &&
            request.resource.data.avatar.updatedAtMs is number
          )
        );
    }
    
    // Users collection (if you have one for roles)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null 
        && (
          request.auth.token.email == 'javier@cursosgratis.ai' ||
          request.auth.token.email == 'info@cursosgratis.ai' ||
          request.auth.token.admin == true ||
          request.auth.token.role == 'admin'
        );
    }
    
    // Deny all other paths by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
